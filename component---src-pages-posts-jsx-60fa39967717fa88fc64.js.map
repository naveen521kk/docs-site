{"version":3,"sources":["webpack://site/./src/components/post-link.jsx","webpack://site/./src/pages/posts.jsx"],"names":["post","className","Link","to","frontmatter","slug","image","src","alt","title","date","Posts","data","allMarkdownRemark","edges","filter","edge","node","map","key","id"],"mappings":"qKAaA,EATiB,SAAC,GAAD,IAAEA,EAAF,EAAEA,KAAF,OACb,uBAAKC,UAAU,gBACX,gBAAC,EAAAC,KAAD,CAAMC,GAAIH,EAAKI,YAAYC,MACtBL,EAAKI,YAAYE,MAAQ,uBAAKC,IAAKP,EAAKI,YAAYE,MAAOE,IAAKR,EAAKI,YAAYK,QAAY,4BAC7FT,EAAKI,YAAYK,MAFtB,KAE+BT,EAAKI,YAAYM,KAFhD,O,UCgBR,EAjBkB,SAAC,GAIZ,IACGC,EADJ,EAHFC,KACIC,kBAAoBC,MAInBC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKb,YAAYM,QACvCQ,KAAI,SAAAF,GAAI,OAAI,gBAAC,EAAD,CAAUG,IAAKH,EAAKC,KAAKG,GAAIpB,KAAMgB,EAAKC,UAEzD,OACI,uBAAKhB,UAAU,qBACX,gBAAC,IAAD,MACCU","file":"component---src-pages-posts-jsx-60fa39967717fa88fc64.js","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"gatsby\";\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\n\r\nconst PostLink = ({post}) => (\r\n    <div className=\"text-lg py-4\">\r\n        <Link to={post.frontmatter.slug}>\r\n            {post.frontmatter.image ? <img src={post.frontmatter.image} alt={post.frontmatter.title} /> : <div></div>}\r\n            {post.frontmatter.title} ({post.frontmatter.date})\r\n        </Link>\r\n    </div>\r\n);\r\n\r\nexport default PostLink;\r\n","import React from \"react\";\r\nimport {graphql} from \"gatsby\";\r\nimport PostLink from \"../components/post-link\";\r\nimport NavBar from \"../components/header.jsx\";\r\n\r\nconst IndexPage = ({\r\n    data: {\r\n        allMarkdownRemark: {edges}\r\n    }\r\n}) => {\r\n    const Posts = edges\r\n        .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\r\n        .map(edge => <PostLink key={edge.node.id} post={edge.node} />);\r\n\r\n    return (\r\n        <div className=\"container mx-auto\">\r\n            <NavBar />\r\n            {Posts}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IndexPage;\r\n\r\nexport const pageQuery = graphql`\r\n    query {\r\n        allMarkdownRemark(sort: {order: DESC, fields: [frontmatter___date]}) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    excerpt(pruneLength: 250)\r\n                    frontmatter {\r\n                        date(formatString: \"MMMM DD, YYYY\")\r\n                        slug\r\n                        title\r\n                        image\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n"],"sourceRoot":""}